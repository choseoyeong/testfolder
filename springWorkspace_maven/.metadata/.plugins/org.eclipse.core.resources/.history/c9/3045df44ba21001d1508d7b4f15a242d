package com.service.spring.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.service.spring.domain.MyProduct;
import com.service.spring.model.MyProductService;

@Controller
public class MyProductController {
	@Autowired
	private MyProductService myProductService;
	
	@RequestMapping("myProduct.do")
	public ModelAndView insert(MyProduct vo) throws Exception{
		// 폼값 하나하나 인자에 넣을 필요 없이 자동으로 바인딩해줌. 폼값들을 알아서 vo로 가져와줌
		/* 자동 바인딩 해줌. 아래 코드를 작성 안해도 됨
		 * String name = request.getParameter("name");
		 * String maker = request.getParameter("maker");
		 * int price = Integer.parseInt(request.getParameter("price"));
		 * 
		 * MyProduct vo = new MyProduct(name, maker, price);
		 */
		
		// addProduct 전의 vo는 id값이 null임
		System.out.println("DB 입력 전 :: " + vo.getId());
		
		myProductService.addProduct(vo); // -->dao.addProduct() --> session.insert()
	
		// addProduct 후의 vo는 id값이 존재함..DB와 동기화 완료
		System.out.println("DB 입력 후 :: " + vo.getId());
		
		// Request에 값이 바인딩되고 저장한 결과페이지로 forward 되어진다.
		
		return new ModelAndView("insert_result", "info", vo);
	}
	
	@RequestMapping("myProductSearch.do")
	public ModelAndView search(String command) throws Exception{
		// Request.parameter 같은거 사용하는 대신 인자 사용하면 됨
		
		if(command.equals(findProductByName)) {
			
		}
		
		return new ModelAndView();
	}
}
