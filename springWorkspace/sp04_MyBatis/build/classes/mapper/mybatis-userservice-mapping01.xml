<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--	
	mybatis-userservice-mapping.xml : SQL 를 갖는 설정화일 (MetaData) 
	- MyBatis Framework 은 XML MetaData를 사용 SQL구문을 관리하며,
	  (SQL은 xml 을 통해 적절히 캡슐화 되어 애플리케이선 의 외부로 분리함)
	- SQL문의 입력(?) / 출력(?)을 매핑한다.  <== 아래의 select element 참조
 -->
 
<!-- SQL definition -->
<mapper namespace="UserMapper01">
	<!-- 단순 파라미터 값을 받을 때는 #{VALUE}를 사용한다..Hash 문법.. -->
	<!--  #{xxx}는 getXxx(), #{VALUE}는 단순 파라미터를 받음 -->
	<select id="getUser" parameterType="string" resultType="user">
		SELECT
		user_id AS userId,
		user_name AS userName,
		password,
		age,
		grade,
		reg_date AS regDate
		FROM users
		WHERE user_id=#{VALUE}
	</select>
	
	<select id="findUserId" parameterType="user" resultType="string">
		SELECT user_name
		FROM users
		WHERE user_id=#{userId}	AND password=#{password}
	</select>
	
</mapper>

<!-- 
Mapping01에서는 단순 파라미터 값을 받는 문법 #{VALUE}
j2se api에서 제공되는 라이브러리 중에서 많이 사용되는 것들은 전부 Alias로 제공되어 있다.

java.lang.String :: string
java.lang.Byte, Integer, Float, Double :: byte, long, float, double, int
java.util.Hashmap :: hashmap
java.util.ArrayList :: arraylist
::
byte :: _byte
int :: _int
-->