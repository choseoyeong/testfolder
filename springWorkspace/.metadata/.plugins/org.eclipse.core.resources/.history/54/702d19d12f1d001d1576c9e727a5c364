<?xml version="1.0" encoding="UTF-8"?>

<!-- Bean Configuration File -->
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
												 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

<!-- 사용자정의 빈 :: id="user01" :: setter 주입 :: 단순 파라미터 주입 -->
<bean id="user01" class="spring.service.domain.User">
	<property name="userId" value="01유저"/>
	<property name="age" value="01"/>
</bean>

<!-- API빈 정의 :: id="password" class="java.lang.String" :: 생성자 값 주입 :: 단순 파라미터값 -->
<bean id="password" class="java.lang.String">
	<constructor-arg value="7777"/>
</bean>
	
<!-- 사용자정의 빈 :: id="user02" :: setter 단순 파라미터 주입 :: (id)02유저, (age)02, (password)위에 정의한 빈-->
<bean id="user02" class="spring.service.domain.User">
	<property name="userId" value="02유저"/>
	<property name="age" value="02"/>
	<property name="password" ref="password"></property>
</bean>

<!-- 사용자빈 정의 :: id="user03" :: DI없음(주입 없음) -->
<bean id="user03" class="spring.service.domain.User"></bean>

<!-- 사용자빈 정의 :: id="user04" :: 생성자 단순 파라미터값 주입 :: 04, 04유저 -->
<bean id="user04" class="spring.service.domain.User">
	<!-- 이렇게 생성자 순서 고려 안하면 에러남 
	<constructor-arg value="04유저"/>
	<constructor-arg value="04"/>
	-->
	<constructor-arg value="04"/>
	<constructor-arg value="04유저"/>
</bean>

<!-- 사용자빈 정의 :: id="user04" :: 생성자 단순 파라미터값 주입 :: 04, 04유저 -->
<bean id="user05" class="spring.service.domain.User">
	<!-- 결과 이상하게 나옴. 현업에서는 거의 생성자보다 setter 사용함 -->
	<constructor-arg value="05"/>
	<constructor-arg value="05유저"/>
	<constructor-arg value="0505"/>
</bean>
</beans>


